name: AnimalHunt
projectReferences:
  Shared:
    path: ../shared/shared.xcodeproj
packages:
  SharedTypes:
    path: ../shared_types/generated/swift/SharedTypes
options:
  bundleIdPrefix: com.red-badger
attributes:
  BuildIndependentTargetsInParallel: true
targets:
  AnimalHunt:
    type: application
    platform: iOS
    deploymentTarget: "16.0"
    entitlements:
      path: AnimalHunt/AnimalHunt.entitlements
      properties:
        com.apple.developer.nfc.readersession.formats: ["TAG"]
        com.apple.developer.associated-domains:
          ["applinks:animal-hunt.red-badger.com"]
    sources:
      - AnimalHunt
      - path: ../shared/src/shared.udl
        buildPhase: sources
    dependencies:
      - target: Shared/uniffi-bindgen-bin
      - target: Shared/shared-staticlib
      - package: SharedTypes
    info:
      path: AnimalHunt/Info.plist
      properties:
        UISupportedInterfaceOrientations:
          - UIInterfaceOrientationPortrait
          - UIInterfaceOrientationLandscapeLeft
          - UIInterfaceOrientationLandscapeRight
          - UIInterfaceOrientationPortraitUpsideDown
        UILaunchScreen: {}
        NFCReaderUsageDescription: "This app uses NFC to read and write tags to use them as animal tokens."
    settings:
      OTHER_LDFLAGS: [-w]
      SWIFT_OBJC_BRIDGING_HEADER: generated/sharedFFI.h
      ENABLE_USER_SCRIPT_SANDBOXING: NO
      "EXCLUDED_SOURCE_FILE_NAMES[arch=*]": "uniffi-bindgen"
    buildRules:
      - name: Generate FFI
        filePattern: "*.udl"
        script: |
          #!/bin/bash
          set -e

          # Skip during indexing and install phase in XCode 13+
          if [ "$ACTION" == "indexbuild" ] || [ "$ACTION" == "install" ]; then
            echo "Not building *.udl files during indexing."
            exit 0
          fi

          # Skip for preview builds
          if [ "$ENABLE_PREVIEWS" = "YES" ]; then
            echo "Not building *.udl files during preview builds."
            exit 0
          fi

          cd "${INPUT_FILE_DIR}/.."
          "${BUILD_DIR}/debug/uniffi-bindgen" generate "src/${INPUT_FILE_NAME}" --language swift --out-dir "${PROJECT_DIR}/generated"
        outputFiles:
          - $(PROJECT_DIR)/generated/$(INPUT_FILE_BASE).swift
          - $(PROJECT_DIR)/generated/$(INPUT_FILE_BASE)FFI.h
        runOncePerArchitecture: false
